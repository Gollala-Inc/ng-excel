import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/cdk/scrolling";
import * as i2 from "@angular/common";
export class ExcelViewerComponent {
    constructor() {
        this.selectMode = false;
        this.selected = new EventEmitter();
        this.unSelected = new EventEmitter();
        this.current = 0;
        this.defaultHeight = 25;
        this.fixedColumnWidth = 45;
        this.rowWidth = 0;
        this.itemSize = 15;
        this.virtualImageOffset = 0;
    }
    set setWorkBook(excelData) {
        this.excelData = excelData;
        console.log(excelData);
        if (this.selectMode && this.excelData) {
            this.excelData.forEach(sheet => {
                sheet.rows.forEach(row => {
                    row.cells.forEach(cell => {
                        if (cell.merge) {
                            cell.cellStyle.height = cell.s_height + 'px';
                        }
                    });
                });
            });
        }
        setTimeout(() => {
            this.updateRowWidth();
        });
    }
    ngOnInit() {
    }
    getRowStyle(rowType, row) {
        if (!this.excelData) {
            return {};
        }
        const sheet = this.excelData[this.current];
        let height = 0;
        const rows = sheet.rows;
        if (rowType === 'header' || !rows[row || 0]['height']) {
            height = this.defaultHeight;
        }
        else {
            height = rows[row || 0]['height'];
        }
        return {
            width: `${this.rowWidth}px`,
            height: `${this.selectMode ? '30' : height}px`,
        };
    }
    updateRowWidth() {
        if (!this.excelData || !this.excelData[this.current] || !this.scrollViewport) {
            return;
        }
        let width = this.fixedColumnWidth;
        const cols = this.excelData[this.current].cols;
        for (let c = 0; c < cols.length; c++) {
            width += cols[c].width ? cols[c].width + 1 : 100;
        }
        this.rowWidth = width;
    }
    selectSheet(index) {
        this.current = index;
        this.updateRowWidth();
    }
    hasScrollForSheets() {
        if (!this.sheetNamesRef) {
            return false;
        }
        return this.sheetNamesRef.nativeElement.scrollWidth > this.sheetNamesRef.nativeElement.offsetWidth;
    }
    onScrollGrid(event) {
        // virtual image offset
        if (!this.scrollViewport || !this.excelData || !this.gridHeaderRef || !this.gridFixedHeaderRef) {
            return;
        }
        const offset = this.scrollViewport['_renderedContentOffset'] || 0;
        const index = Math.round(offset / this.itemSize);
        if (!index) {
            this.virtualImageOffset = 0;
        }
        else {
            let rowHeight = 0;
            for (let i = 0; i < index; i++) {
                const os = this.itemSize - this.excelData[this.current].rows[i].height;
                rowHeight += os;
            }
            this.virtualImageOffset = rowHeight - offset;
        }
        // scroll left
        const scrollLeft = event.target.scrollLeft;
        if (!scrollLeft) {
            this.gridHeaderRef.nativeElement.style.transform = `translateX(0px)`;
            this.gridFixedHeaderRef.nativeElement.style.transform = `translateX(0px)`;
            return;
        }
        this.gridHeaderRef.nativeElement.style.transform = `translateX(-${scrollLeft}px)`;
        this.gridFixedHeaderRef.nativeElement.style.transform = `translateX(${scrollLeft}px)`;
    }
    onClickRow(row) {
        if (!this.selectMode || !this.excelData) {
            return;
        }
        const selected = row.selected;
        this.excelData[this.current].rows.forEach(row => {
            row.selected = false;
        });
        row.selected = !selected;
        if (row.selected) {
            this.selected.next(row);
        }
        else {
            this.unSelected.next(row);
        }
    }
}
ExcelViewerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: ExcelViewerComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
ExcelViewerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.3", type: ExcelViewerComponent, selector: "ng-excel-viewer", inputs: { selectMode: "selectMode", setWorkBook: ["excelData", "setWorkBook"] }, outputs: { selected: "selected", unSelected: "unSelected" }, viewQueries: [{ propertyName: "gridHeaderRef", first: true, predicate: ["gridHeader"], descendants: true }, { propertyName: "gridFixedHeaderRef", first: true, predicate: ["gridFixedHeader"], descendants: true }, { propertyName: "scrollViewport", first: true, predicate: ["scrollViewport"], descendants: true }, { propertyName: "sheetNamesRef", first: true, predicate: ["sheetNames"], descendants: true }], ngImport: i0, template: "<div class=\"component-wrap\" [ngClass]=\"{'select-mode': selectMode}\" *ngIf=\"excelData && excelData[current]\">\r\n  <div class=\"grid-header\">\r\n    <div class=\"row\" #gridHeader [ngStyle]=\"getRowStyle('header')\">\r\n      <div class=\"cell fixed\" #gridFixedHeader></div>\r\n      <div class=\"cell\" *ngFor=\"let col of excelData[current].cols\" [style.width.px]=\"col.width\">\r\n        {{col.name}}\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"grid-body\" [ngClass]=\"{'withScroll': hasScrollForSheets()}\">\r\n    <cdk-virtual-scroll-viewport class=\"grid-body-viewport\"\r\n                                 [itemSize]=\"itemSize\" [minBufferPx]=\"500\" [maxBufferPx]=\"500\"\r\n                                 (scroll)=\"onScrollGrid($event)\"\r\n                                 #scrollViewport>\r\n      <!--\uD604\uC7AC \uC0C1\uD669\uC5D0\uC11C \uC774\uBBF8\uC9C0 \uACE0\uB824 \uC548\uD568, \uB2E4\uC74C\uC73C\uB85C -->\r\n      <!--<div class=\"img-wrap\" [style.transform]=\"'translate(45px, ' + virtualImageOffset + 'px)'\">\r\n        <div class=\"image\" *ngFor=\"let img of excelData[current].images\" [ngStyle]=\"img.styleExpression\">\r\n          <img [src]=\"'data:image/png;base64,' + img.image\">\r\n        </div>\r\n      </div>-->\r\n      <ng-container *cdkVirtualFor=\"let row of excelData[current].rows; let r = index; templateCacheSize: 0;\">\r\n        <div *ngIf=\"!row.hidden\" class=\"row\" [ngStyle]=\"getRowStyle('data', r || 0)\" (click)=\"onClickRow(row)\">\r\n          <div class=\"hover-border\" [ngClass]=\"{'active': row.selected}\">\r\n            <div class=\"selected\">\r\n              <svg width=\"13\" height=\"10\" viewBox=\"0 0 13 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M11.8899 1.13993C11.7947 1.04768 11.6674 0.996094 11.5349 0.996094C11.4024 0.996094 11.2751 1.04768 11.1799 1.13993L5.87988 6.48993C5.8334 6.5368 5.77815 6.57399 5.71722 6.59938C5.65629 6.62476 5.59091 6.63783 5.5249 6.63783C5.4589 6.63783 5.39357 6.62476 5.33264 6.59938C5.27171 6.57399 5.2164 6.5368 5.16992 6.48993L2.54993 3.84993C2.50345 3.80307 2.44814 3.76587 2.38721 3.74049C2.32628 3.7151 2.26089 3.70203 2.19489 3.70203C2.12888 3.70203 2.06355 3.7151 2.00262 3.74049C1.94169 3.76587 1.88639 3.80307 1.8399 3.84993L1.13989 4.54993C1.04764 4.64508 0.996094 4.7724 0.996094 4.90493C0.996094 5.03746 1.04764 5.16478 1.13989 5.25993L5.13989 9.31993C5.23504 9.41218 5.36241 9.46377 5.49493 9.46377C5.62746 9.46377 5.75476 9.41218 5.84991 9.31993L12.5599 2.54993C12.6515 2.45647 12.7028 2.33081 12.7028 2.19993C12.7028 2.06905 12.6515 1.9434 12.5599 1.84993L11.8899 1.13993Z\" fill=\"white\"/>\r\n              </svg>\r\n            </div>\r\n          </div>\r\n          <div class=\"cell fixed\">\r\n            <div class=\"cell-item\" [innerHTML]=\"(r + 1)\"></div>\r\n          </div>\r\n          <div class=\"cell\" *ngFor=\"let cell of row.cells; let c = index\"\r\n               [style.width.px]=\"excelData[current].cols[c]?.width || 0\">\r\n            <div class=\"cell-item\" [innerHTML]=\"cell.cellValue\" [ngStyle]=\"cell.cellStyle\"></div>\r\n          </div>\r\n        </div>\r\n      </ng-container>\r\n    </cdk-virtual-scroll-viewport>\r\n  </div>\r\n  <div class=\"grid-footer\" *ngIf=\"!selectMode\">\r\n    <ul class=\"sheets\" #sheetNames>\r\n      <li *ngFor=\"let sheet of excelData; let i = index\" [ngClass]=\"i === current ? 'selected' : ''\" (click)=\"selectSheet(i)\">\r\n        {{ sheet.name }}\r\n      </li>\r\n    </ul>\r\n  </div>\r\n\r\n</div>\r\n<table >\r\n\r\n</table>\r\n", styles: [":host{height:100%;width:-moz-fit-content;width:fit-content;display:inline-block}.component-wrap{height:100%;overflow:hidden;display:flex;flex-direction:column}.component-wrap.select-mode{max-width:1032px;height:305px;padding-left:40px;padding-right:2px;max-height:100%}.component-wrap.select-mode cdk-virtual-scroll-viewport{overflow:visible;contain:initial;z-index:11}.component-wrap.select-mode cdk-virtual-scroll-viewport ::ng-deep .cdk-virtual-scroll-content-wrapper{contain:inherit}.component-wrap.select-mode .grid-body .row{position:relative}.component-wrap.select-mode .grid-body .row:hover .hover-border{display:block;cursor:pointer}.component-wrap.select-mode .grid-body .row .hover-border{display:none;position:absolute;left:-2px;top:-2px;width:100%;height:100%;border:2px solid #EE2554;max-width:1032px;z-index:11;border-radius:4px}.component-wrap.select-mode .grid-body .row .hover-border.active{display:block;background:#ee25541a}.component-wrap.select-mode .grid-body .row .hover-border.active .selected{display:flex}.component-wrap.select-mode .grid-body .row .hover-border .selected{position:absolute;width:24px;height:24px;left:-40px;top:3px;border:1px solid #CC1F46;box-sizing:border-box;border-radius:12px;background:#EE2554;display:none;align-items:center;justify-content:center}.component-wrap .row{display:inline-block;border-bottom:1px solid #ddd}.component-wrap .row .hover-border{display:none}.component-wrap .row .cell{position:relative;height:100%;display:inline-block}.component-wrap .row .cell.fixed{width:45px;position:sticky;left:0;float:left;z-index:10}.component-wrap .row .cell.fixed .cell-item{display:flex;align-items:center;justify-content:center;background:#f6f6f6;font-size:13px}.component-wrap .row .cell .cell-item{position:absolute;top:0;left:0;width:100%;height:100%;display:flex;padding:3px;box-sizing:border-box}.component-wrap .row .cell+.cell{border-left:1px solid #eee}.component-wrap .grid-header{justify-content:center;overflow:hidden;height:25px}.component-wrap .grid-header .row{color:#757575;height:24px!important}.component-wrap .grid-header .row .fixed{background:#f6f6f6}.component-wrap .grid-header .row .cell{white-space:nowrap;text-align:center;background:#f6f6f6;font-size:13px;line-height:25px;border-bottom:1px solid #ddd}.component-wrap .grid-body{height:calc(100% - 50px);flex:1}.component-wrap .grid-body .grid-body-viewport{height:100%}.component-wrap .grid-body .grid-body-viewport .no-order{background-color:#ff5d5d!important;color:#fff}.component-wrap .grid-body .grid-body-viewport .no-order:hover{background-color:#ff2f2a!important}.component-wrap .grid-body .grid-body-viewport ::ng-deep .cdk-virtual-scroll-content-wrapper{display:inline-grid}.component-wrap .grid-body .img-wrap{position:relative;transform:translate(45px);z-index:10}.component-wrap .grid-body .img-wrap .image{position:absolute;z-index:50}.component-wrap .grid-body .img-wrap .image img{width:100%;height:100%}.component-wrap .grid-body.withScroll{height:calc(100% - 65px)}.component-wrap .grid-footer{height:25px;background-color:#eee}.component-wrap .grid-footer .sheets{margin:0;list-style:none;padding:0 0 0 30px;white-space:nowrap;overflow-x:scroll}.component-wrap .grid-footer .sheets>li{display:inline-block;padding:3px 15px;border-right:solid 1px #ddd;font-size:12px;cursor:pointer}.component-wrap .grid-footer .sheets>li:first-child{border-left:solid 1px #ddd}.component-wrap .grid-footer .sheets>li.selected{border-bottom:solid 3px #1f6e39;background-color:#fff;cursor:default}\n"], components: [{ type: i1.CdkVirtualScrollViewport, selector: "cdk-virtual-scroll-viewport", inputs: ["orientation", "appendOnly"], outputs: ["scrolledIndexChange"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i2.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }, { type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i1.CdkFixedSizeVirtualScroll, selector: "cdk-virtual-scroll-viewport[itemSize]", inputs: ["itemSize", "minBufferPx", "maxBufferPx"] }, { type: i1.CdkVirtualForOf, selector: "[cdkVirtualFor][cdkVirtualForOf]", inputs: ["cdkVirtualForOf", "cdkVirtualForTrackBy", "cdkVirtualForTemplate", "cdkVirtualForTemplateCacheSize"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: ExcelViewerComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ng-excel-viewer', template: "<div class=\"component-wrap\" [ngClass]=\"{'select-mode': selectMode}\" *ngIf=\"excelData && excelData[current]\">\r\n  <div class=\"grid-header\">\r\n    <div class=\"row\" #gridHeader [ngStyle]=\"getRowStyle('header')\">\r\n      <div class=\"cell fixed\" #gridFixedHeader></div>\r\n      <div class=\"cell\" *ngFor=\"let col of excelData[current].cols\" [style.width.px]=\"col.width\">\r\n        {{col.name}}\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"grid-body\" [ngClass]=\"{'withScroll': hasScrollForSheets()}\">\r\n    <cdk-virtual-scroll-viewport class=\"grid-body-viewport\"\r\n                                 [itemSize]=\"itemSize\" [minBufferPx]=\"500\" [maxBufferPx]=\"500\"\r\n                                 (scroll)=\"onScrollGrid($event)\"\r\n                                 #scrollViewport>\r\n      <!--\uD604\uC7AC \uC0C1\uD669\uC5D0\uC11C \uC774\uBBF8\uC9C0 \uACE0\uB824 \uC548\uD568, \uB2E4\uC74C\uC73C\uB85C -->\r\n      <!--<div class=\"img-wrap\" [style.transform]=\"'translate(45px, ' + virtualImageOffset + 'px)'\">\r\n        <div class=\"image\" *ngFor=\"let img of excelData[current].images\" [ngStyle]=\"img.styleExpression\">\r\n          <img [src]=\"'data:image/png;base64,' + img.image\">\r\n        </div>\r\n      </div>-->\r\n      <ng-container *cdkVirtualFor=\"let row of excelData[current].rows; let r = index; templateCacheSize: 0;\">\r\n        <div *ngIf=\"!row.hidden\" class=\"row\" [ngStyle]=\"getRowStyle('data', r || 0)\" (click)=\"onClickRow(row)\">\r\n          <div class=\"hover-border\" [ngClass]=\"{'active': row.selected}\">\r\n            <div class=\"selected\">\r\n              <svg width=\"13\" height=\"10\" viewBox=\"0 0 13 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M11.8899 1.13993C11.7947 1.04768 11.6674 0.996094 11.5349 0.996094C11.4024 0.996094 11.2751 1.04768 11.1799 1.13993L5.87988 6.48993C5.8334 6.5368 5.77815 6.57399 5.71722 6.59938C5.65629 6.62476 5.59091 6.63783 5.5249 6.63783C5.4589 6.63783 5.39357 6.62476 5.33264 6.59938C5.27171 6.57399 5.2164 6.5368 5.16992 6.48993L2.54993 3.84993C2.50345 3.80307 2.44814 3.76587 2.38721 3.74049C2.32628 3.7151 2.26089 3.70203 2.19489 3.70203C2.12888 3.70203 2.06355 3.7151 2.00262 3.74049C1.94169 3.76587 1.88639 3.80307 1.8399 3.84993L1.13989 4.54993C1.04764 4.64508 0.996094 4.7724 0.996094 4.90493C0.996094 5.03746 1.04764 5.16478 1.13989 5.25993L5.13989 9.31993C5.23504 9.41218 5.36241 9.46377 5.49493 9.46377C5.62746 9.46377 5.75476 9.41218 5.84991 9.31993L12.5599 2.54993C12.6515 2.45647 12.7028 2.33081 12.7028 2.19993C12.7028 2.06905 12.6515 1.9434 12.5599 1.84993L11.8899 1.13993Z\" fill=\"white\"/>\r\n              </svg>\r\n            </div>\r\n          </div>\r\n          <div class=\"cell fixed\">\r\n            <div class=\"cell-item\" [innerHTML]=\"(r + 1)\"></div>\r\n          </div>\r\n          <div class=\"cell\" *ngFor=\"let cell of row.cells; let c = index\"\r\n               [style.width.px]=\"excelData[current].cols[c]?.width || 0\">\r\n            <div class=\"cell-item\" [innerHTML]=\"cell.cellValue\" [ngStyle]=\"cell.cellStyle\"></div>\r\n          </div>\r\n        </div>\r\n      </ng-container>\r\n    </cdk-virtual-scroll-viewport>\r\n  </div>\r\n  <div class=\"grid-footer\" *ngIf=\"!selectMode\">\r\n    <ul class=\"sheets\" #sheetNames>\r\n      <li *ngFor=\"let sheet of excelData; let i = index\" [ngClass]=\"i === current ? 'selected' : ''\" (click)=\"selectSheet(i)\">\r\n        {{ sheet.name }}\r\n      </li>\r\n    </ul>\r\n  </div>\r\n\r\n</div>\r\n<table >\r\n\r\n</table>\r\n", styles: [":host{height:100%;width:-moz-fit-content;width:fit-content;display:inline-block}.component-wrap{height:100%;overflow:hidden;display:flex;flex-direction:column}.component-wrap.select-mode{max-width:1032px;height:305px;padding-left:40px;padding-right:2px;max-height:100%}.component-wrap.select-mode cdk-virtual-scroll-viewport{overflow:visible;contain:initial;z-index:11}.component-wrap.select-mode cdk-virtual-scroll-viewport ::ng-deep .cdk-virtual-scroll-content-wrapper{contain:inherit}.component-wrap.select-mode .grid-body .row{position:relative}.component-wrap.select-mode .grid-body .row:hover .hover-border{display:block;cursor:pointer}.component-wrap.select-mode .grid-body .row .hover-border{display:none;position:absolute;left:-2px;top:-2px;width:100%;height:100%;border:2px solid #EE2554;max-width:1032px;z-index:11;border-radius:4px}.component-wrap.select-mode .grid-body .row .hover-border.active{display:block;background:#ee25541a}.component-wrap.select-mode .grid-body .row .hover-border.active .selected{display:flex}.component-wrap.select-mode .grid-body .row .hover-border .selected{position:absolute;width:24px;height:24px;left:-40px;top:3px;border:1px solid #CC1F46;box-sizing:border-box;border-radius:12px;background:#EE2554;display:none;align-items:center;justify-content:center}.component-wrap .row{display:inline-block;border-bottom:1px solid #ddd}.component-wrap .row .hover-border{display:none}.component-wrap .row .cell{position:relative;height:100%;display:inline-block}.component-wrap .row .cell.fixed{width:45px;position:sticky;left:0;float:left;z-index:10}.component-wrap .row .cell.fixed .cell-item{display:flex;align-items:center;justify-content:center;background:#f6f6f6;font-size:13px}.component-wrap .row .cell .cell-item{position:absolute;top:0;left:0;width:100%;height:100%;display:flex;padding:3px;box-sizing:border-box}.component-wrap .row .cell+.cell{border-left:1px solid #eee}.component-wrap .grid-header{justify-content:center;overflow:hidden;height:25px}.component-wrap .grid-header .row{color:#757575;height:24px!important}.component-wrap .grid-header .row .fixed{background:#f6f6f6}.component-wrap .grid-header .row .cell{white-space:nowrap;text-align:center;background:#f6f6f6;font-size:13px;line-height:25px;border-bottom:1px solid #ddd}.component-wrap .grid-body{height:calc(100% - 50px);flex:1}.component-wrap .grid-body .grid-body-viewport{height:100%}.component-wrap .grid-body .grid-body-viewport .no-order{background-color:#ff5d5d!important;color:#fff}.component-wrap .grid-body .grid-body-viewport .no-order:hover{background-color:#ff2f2a!important}.component-wrap .grid-body .grid-body-viewport ::ng-deep .cdk-virtual-scroll-content-wrapper{display:inline-grid}.component-wrap .grid-body .img-wrap{position:relative;transform:translate(45px);z-index:10}.component-wrap .grid-body .img-wrap .image{position:absolute;z-index:50}.component-wrap .grid-body .img-wrap .image img{width:100%;height:100%}.component-wrap .grid-body.withScroll{height:calc(100% - 65px)}.component-wrap .grid-footer{height:25px;background-color:#eee}.component-wrap .grid-footer .sheets{margin:0;list-style:none;padding:0 0 0 30px;white-space:nowrap;overflow-x:scroll}.component-wrap .grid-footer .sheets>li{display:inline-block;padding:3px 15px;border-right:solid 1px #ddd;font-size:12px;cursor:pointer}.component-wrap .grid-footer .sheets>li:first-child{border-left:solid 1px #ddd}.component-wrap .grid-footer .sheets>li.selected{border-bottom:solid 3px #1f6e39;background-color:#fff;cursor:default}\n"] }]
        }], ctorParameters: function () { return []; }, propDecorators: { gridHeaderRef: [{
                type: ViewChild,
                args: ['gridHeader']
            }], gridFixedHeaderRef: [{
                type: ViewChild,
                args: ['gridFixedHeader']
            }], scrollViewport: [{
                type: ViewChild,
                args: ['scrollViewport']
            }], sheetNamesRef: [{
                type: ViewChild,
                args: ['sheetNames']
            }], selectMode: [{
                type: Input,
                args: ['selectMode']
            }], selected: [{
                type: Output,
                args: ['selected']
            }], unSelected: [{
                type: Output,
                args: ['unSelected']
            }], setWorkBook: [{
                type: Input,
                args: ['excelData']
            }] } });
//# sourceMappingURL=data:application/json;base64,