{"version":3,"file":"ng-excel.mjs","sources":["../../../projects/ng-excel/src/lib/class/excel-row.ts","../../../projects/ng-excel/src/lib/class/excel-cell.ts","../../../projects/ng-excel/src/lib/class/excel-sheet.ts","../../../projects/ng-excel/src/lib/ng-excel.service.ts","../../../projects/ng-excel/src/lib/component/excel-viewer/excel-viewer.component.ts","../../../projects/ng-excel/src/lib/component/excel-viewer/excel-viewer.component.html","../../../projects/ng-excel/src/lib/ng-excel.module.ts","../../../projects/ng-excel/src/public-api.ts","../../../projects/ng-excel/src/ng-excel.ts"],"sourcesContent":["import {ExcelCell} from './excel-cell';\r\n\r\nexport class ExcelRow {\r\n\r\n  rowNumber: number = 0;\r\n  height: number = 0;\r\n  hidden: boolean = false;\r\n  cells: ExcelCell[] = [];\r\n  selected: boolean = false;\r\n\r\n  constructor(rowNumber: number, hidden: boolean, height: number, cells: ExcelCell[], private row: any) {\r\n    this.rowNumber = rowNumber;\r\n    this.hidden = hidden;\r\n    this.height = height;\r\n    this.cells = cells;\r\n  }\r\n\r\n  get values() {\r\n    return this.row.values;\r\n  }\r\n}\r\n","const indexcedColors: any = {\r\n  '0': '#FF000000',\r\n  '1': '#FFFFFFFF',\r\n  '2': '#FFFF0000',\r\n  '3': '#FF00FF00',\r\n  '4': '#FF0000FF',\r\n  '5': '#FFFFFF00',\r\n  '6': '#FFFF00FF',\r\n  '7': '#FF00FFFF',\r\n  '8': '#FF000000',\r\n  '9': '#FFFFFFFF',\r\n  '10': '#FFFF0000',\r\n  '11': '#FF00FF00',\r\n  '12': '#FF0000FF',\r\n  '13': '#FFFFFF00',\r\n  '14': '#FFFF00FF',\r\n  '15': '#FF00FFFF',\r\n  '16': '#FF800000',\r\n  '17': '#FF008000',\r\n  '18': '#FF000080',\r\n  '19': '#FF808000',\r\n  '20': '#FF800080',\r\n  '21': '#FF008080',\r\n  '22': '#FFC0C0C0',\r\n  '23': '#FF808080',\r\n  '24': '#FF9999FF',\r\n  '25': '#FF993366',\r\n  '26': '#FFFFFFCC',\r\n  '27': '#FFCCFFFF',\r\n  '28': '#FF660066',\r\n  '29': '#FFFF8080',\r\n  '30': '#FF0066CC',\r\n  '31': '#FFCCCCFF',\r\n  '32': '#FF000080',\r\n  '33': '#FFFF00FF',\r\n  '34': '#FFFFFF00',\r\n  '35': '#FF00FFFF',\r\n  '36': '#FF800080',\r\n  '37': '#FF800000',\r\n  '38': '#FF008080',\r\n  '39': '#FF0000FF',\r\n  '40': '#FF00CCFF',\r\n  '41': '#FFCCFFFF',\r\n  '42': '#FFCCFFCC',\r\n  '43': '#FFFFFF99',\r\n  '44': '#FF99CCFF',\r\n  '45': '#FFFF99CC',\r\n  '46': '#FFCC99FF',\r\n  '47': '#FFFFCC99',\r\n  '48': '#FF3366FF',\r\n  '49': '#FF33CCCC',\r\n  '50': '#FF99CC00',\r\n  '51': '#FFFFCC00',\r\n  '52': '#FFFF9900',\r\n  '53': '#FFFF6600',\r\n  '54': '#FF666699',\r\n  '55': '#FF969696',\r\n  '56': '#FF003366',\r\n  '57': '#FF339966',\r\n  '58': '#FF003300',\r\n  '59': '#FF333300',\r\n  '60': '#FF993300',\r\n  '61': '#FF993366',\r\n  '62': '#FF333399',\r\n  '63': '#FF333333',\r\n}\r\n\r\nconst themes = ['#FFFFFF', '#000000', '#E7E6E6', '#44546A', '#5B9BD5', '#ED7D31', '#A5A5A5', '#FFC000', '#4472C4', '#70AD47'];\r\n\r\nexport class ExcelCell{\r\n\r\n  address: string | undefined;\r\n  cellNumber: number | undefined;\r\n  height: number | undefined;\r\n  s_height: number | undefined;\r\n  style: any | undefined;\r\n  width: number | undefined;\r\n  value: any | undefined;\r\n  merge: boolean = false;\r\n  cellStyle: any;\r\n  cellValue: any | undefined;\r\n\r\n\r\n\r\n\r\n  constructor(address: string | undefined, cellNumber: number | undefined, height: number | undefined, style: any | undefined,\r\n              width: number | undefined, value: string | undefined, merge: boolean, s_height: number | undefined) {\r\n    this.address = address;\r\n    this.cellNumber = cellNumber;\r\n    this.height = height;\r\n    this.style = style;\r\n    this.width = width;\r\n    this.value = value;\r\n    this.merge = merge;\r\n    this.s_height = s_height;\r\n    this.getCellStyle();\r\n    this.getCellValue();\r\n  }\r\n\r\n  getCellStyle() {\r\n    const {style} = this;\r\n    const result: any = {};\r\n    if (style) {\r\n      if (style.font?.size) {\r\n        result['font-size'] = `${style.font.size}px`;\r\n      }\r\n      if (style.font?.bold) {\r\n        result['font-weight'] = 'bold';\r\n      }\r\n      if (style.font?.color?.argb) {\r\n        result['color'] = `#${style.font.color.argb.slice(-6)}`;\r\n      }\r\n\r\n      if (typeof this.value === 'number') {\r\n        result['justify-content'] = 'flex-end';\r\n      }\r\n      if (style.alignment) {\r\n        const alignment: any = {\r\n          middle: 'center',\r\n          center: 'center',\r\n          top: 'flex-start',\r\n          bottom: 'flex-end',\r\n          left: 'flex-start',\r\n          right: 'flex-end'\r\n        }\r\n        if (style.alignment.vertical) {\r\n          result['align-items'] = alignment[style.alignment.vertical];\r\n        }\r\n        if (style.alignment.horizontal) {\r\n          result['justify-content'] = alignment[style.alignment.horizontal];\r\n        }\r\n      }\r\n      if (style.fill?.color?.indexed < 64) {\r\n        const index = (style.fill?.color?.indexed || 0).toString();\r\n        result['background'] = indexcedColors[index];\r\n      }\r\n      if (style.fill?.fgColor?.argb) {\r\n        result['background'] = `#${style.fill.fgColor.argb.slice(-6)}`;\r\n      }\r\n      if (style.fill?.fgColor?.theme) {\r\n        result['background'] = this.getTintColor(themes[style.fill.fgColor.theme], style.fill.fgColor.tint || 0);\r\n      }\r\n    }\r\n\r\n    if (this.merge) {\r\n      result['width'] = this.width + 'px';\r\n      result['height'] = this.height + 'px' || '100%';\r\n      result['z-index'] = 1;\r\n      if (!result.background) {\r\n        result['background'] = '#fff';\r\n      }\r\n    }\r\n\r\n    this.cellStyle = result;\r\n  }\r\n\r\n  getCellValue() {\r\n    if (typeof this.value === 'object' && this.value.richText) {\r\n      return this.cellValue = this.value.richText.map((d: any) => d.text);\r\n    }\r\n    return this.cellValue = this.value;\r\n  }\r\n\r\n  private getTintColor(hex:string, tint:number) {\r\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n    hex = hex.replace(shorthandRegex, (m, r, g, b) => {\r\n      return r + r + g + g + b + b;\r\n    });\r\n\r\n    const rgb = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    if (!rgb) {\r\n      return null;\r\n    }\r\n    const r = parseInt(rgb[1], 16);\r\n    const g = parseInt(rgb[2], 16);\r\n    const b = parseInt(rgb[3], 16);\r\n\r\n    if (tint >= 0) {\r\n      return this.rgbToHex(r + ((255 - r) * tint), g + ((255 - g) * tint), b + ((255 - b) * tint));\r\n    } else {\r\n      return this.rgbToHex(r * (1 - (tint * -1)), g * (1 - (tint * -1)), b * (1 - (tint * -1)));\r\n    }\r\n  }\r\n\r\n  private rgbToHex(r:number, g:number, b:number) {\r\n    return \"#\" + ((1 << 24) + (Math.round(r) << 16) + (Math.round(g) << 8) + Math.round(b)).toString(16).slice(1);\r\n  }\r\n\r\n\r\n}\r\n","import {ExcelRow} from './excel-row';\r\nimport {Worksheet, Media, Workbook, ImageRange} from 'exceljs';\r\nimport {ExcelCell} from './excel-cell';\r\n\r\ninterface Cols {\r\n  width: number;\r\n  hidden: boolean;\r\n  name: string;\r\n}\r\n\r\ninterface Image {\r\n  col1: number;\r\n  col2: number;\r\n  colOff1: number;\r\n  colOff2: number;\r\n  row1: number;\r\n  row2: number;\r\n  rowOff1: number;\r\n  rowOff2: number;\r\n  image: any;\r\n  width: number;\r\n  height: number;\r\n  x: number;\r\n  y: number;\r\n  ext: any;\r\n  styleExpression: any;\r\n}\r\n\r\nexport class ExcelSheet {\r\n\r\n  name: string = '';\r\n  cols: Cols[] = [];\r\n  rows: ExcelRow[] = [];\r\n  rowCount: number = 0;\r\n  images: Array<any> = [];\r\n\r\n\r\n  constructor(private sheet: Worksheet, private workbook: Workbook, private media: any[]) {\r\n    this.name = sheet.name;\r\n\r\n    let maxColumns = 0;\r\n    let maxRows = 0;\r\n\r\n\r\n    const merges = (sheet as any)._merges;\r\n    const mergeCell: any = {};\r\n    Object.keys(merges).forEach(key => {\r\n      const {left, right, top, bottom} = merges[key].model;\r\n\r\n      // maxColumns\r\n      if (maxColumns < right) {\r\n        maxColumns = right;\r\n      }\r\n      // maxRows\r\n      if (maxRows < bottom) {\r\n        maxRows = bottom;\r\n      }\r\n\r\n      // merge cell의 witdh, heigt 구하기\r\n      let width = 0;\r\n      let height = 0;\r\n      let s_height = 0;\r\n      for (let i = left; i <= right; i++) {\r\n        if (!sheet.getColumn(i).hidden) {\r\n          width += (sheet.getColumn(i).width as number) || 8.34;\r\n        }\r\n      }\r\n      for (let i = top; i <= bottom; i++) {\r\n        if (!sheet.getRow(i).hidden) {\r\n          height += (sheet.getRow(i).height as number) || 15;\r\n          s_height += 23;\r\n        }\r\n      }\r\n      mergeCell[key] = {\r\n        width: width * 8,\r\n        height: Math.round(height * 1.3),\r\n        s_height: Math.round(s_height * 1.3)\r\n      }\r\n    });\r\n\r\n    // rows\r\n    /*sheet.eachRow((row, rowNumber) => {\r\n      if (maxRows < rowNumber) {\r\n        maxRows = rowNumber;\r\n      }\r\n      const cells: ExcelCell[] = [];\r\n      for (let i = 1; i <= row.cellCount; i++) {\r\n        if (maxColumns < i) {\r\n          maxColumns = i;\r\n        }\r\n        let merge = false;\r\n        let cell = (row.getCell(i).model as any);\r\n        const cellNumber = i;\r\n        let width: number = (sheet.getColumn(i).width || 8.34) * 8;\r\n        let height: number = Math.round((row.height || 15) * 1.3);\r\n        if (mergeCell[cell.address]) {\r\n          width = mergeCell[cell.address].width;\r\n          height = mergeCell[cell.address].height;\r\n          merge = true;\r\n        }\r\n        const excelCell = new ExcelCell(cell.address, cellNumber, height, cell.style, width, cell.value, merge);\r\n        cells.push(excelCell);\r\n      }\r\n\r\n      this.rows.push(new ExcelRow(rowNumber, row.hidden, Math.round((row.height || 15) * 1.3), cells));\r\n      this.rowCount++;\r\n    });*/\r\n    for (let i = 0; i < sheet.rowCount; i++) {\r\n      if (maxRows < i+1) {\r\n        maxRows = i+1;\r\n      }\r\n      const row = sheet.getRow(i+1);\r\n      const cells: ExcelCell[] = [];\r\n      for (let i = 1; i <= row.cellCount; i++) {\r\n        if (maxColumns < i) {\r\n          maxColumns = i;\r\n        }\r\n        let merge = false;\r\n        let cell = (row.getCell(i).model as any);\r\n        const cellNumber = i;\r\n        let width: number = (sheet.getColumn(i).width || 8.34) * 8;\r\n        let height: number = Math.round((row.height || 15) * 1.3);\r\n        let s_height: number = Math.round(23 * 1.3);\r\n        if (mergeCell[cell.address]) {\r\n          width = mergeCell[cell.address].width;\r\n          height = mergeCell[cell.address].height;\r\n          s_height = mergeCell[cell.address].s_height;\r\n          merge = true;\r\n        }\r\n        const excelCell = new ExcelCell(cell.address, cellNumber, height, cell.style, width, cell.value, merge, s_height);\r\n        cells.push(excelCell);\r\n      }\r\n\r\n      this.rows.push(new ExcelRow(i, row.hidden, Math.round((row.height || 15) * 1.3), cells, row));\r\n      this.rowCount++;\r\n    }\r\n\r\n    // cols\r\n    for (let i = 1; i <= sheet.columnCount; i++) {\r\n      const {width, hidden} = sheet.getColumn(i);\r\n      this.cols.push({\r\n        width: (width || 8.34) * 8,\r\n        hidden: hidden || false,\r\n        name: this.getColumTitle(i - 1)\r\n      });\r\n    }\r\n\r\n    // images 지금 상황에서 이미지 주문 고려안함, 차후 고려\r\n    //this.getImages();\r\n  }\r\n\r\n  getColumTitle(index: number) {\r\n    let title = '';\r\n    if (Math.floor(index / 26) > 0) {\r\n      title += String.fromCharCode(65 + Math.floor(index / 26) - 1);\r\n    }\r\n\r\n    title += String.fromCharCode(65 + index % 26);\r\n    return title;\r\n  }\r\n\r\n  getImages() {\r\n    const images: Image[] = [];\r\n    this.sheet.getImages().forEach(img => {\r\n      const position = this.getImagePosition(img.range);\r\n      images.push({\r\n        col1: img.range.tl?.nativeCol,\r\n        col2: img.range.br?.nativeCol,\r\n        colOff1: img.range.tl?.nativeColOff,\r\n        colOff2: img.range.br?.nativeColOff,\r\n        row1: img.range.tl?.nativeRow,\r\n        row2: img.range.br?.nativeRow,\r\n        rowOff1: img.range.tl?.nativeRowOff,\r\n        rowOff2: img.range.br?.nativeRowOff,\r\n        image: this.getImage(+img.imageId),\r\n        ext: (img.range as any).ext,\r\n        ...position\r\n      })\r\n    });\r\n    this.images = images;\r\n  }\r\n\r\n  private getImagePosition(range: ImageRange) {\r\n    const result = {\r\n      width: 0,\r\n      height: 0,\r\n      x: 0,\r\n      y: 0,\r\n      styleExpression: {}\r\n    }\r\n    // 시작점 찾기\r\n    let aaa = 0;\r\n    for (let i = 0; i < range.tl.nativeCol; i++){\r\n      if (!this.sheet.getColumn(i+1)?.hidden) {\r\n        result.x += (this.sheet.getColumn(i+1)?.width || 8.34) * 8\r\n        // border 가 있기 때문에 1픽셀식 추가\r\n        if (i > 0) {\r\n          result.x++;\r\n        }\r\n      }\r\n    }\r\n    for (let i = 0; i < range.tl.nativeRow; i++){\r\n      if (!this.sheet.getRow(i+1)?.hidden) {\r\n        result.y += Math.round((this.sheet.getRow(i+1).height || 15) * 1.3);\r\n        // border 가 있기 때문에 1픽셀식 추가\r\n        if (i > 0) {\r\n          result.y++;\r\n        }\r\n      }\r\n    }\r\n    // 시작점 offset 추가\r\n    result.x += range.tl.nativeColOff / 9525;\r\n    result.y += range.tl.nativeRowOff / 9525;\r\n\r\n    if ((range as any).ext) {\r\n      result.width = (range as any).ext.width;\r\n      result.height = (range as any).ext.height;\r\n    } else {\r\n      // 끝점 찾기\r\n      for (let i = range.tl.nativeCol; i < range.br.nativeCol; i++) {\r\n        result.width += (this.sheet.getColumn(i+1)?.width || 8.34) * 8\r\n      }\r\n      console.log('tl.nativeRow', range.tl.nativeRow);\r\n      for (let i = range.tl.nativeRow; i < range.br.nativeRow; i++) {\r\n        result.height += Math.round((this.sheet.getRow(i+1).height || 15) * 1.3);\r\n      }\r\n      // 끝점 offset 추가\r\n      result.width += (range.br.nativeColOff / 9525) - (range.tl.nativeColOff / 9525);\r\n      result.height += (range.br.nativeRowOff / 9525) - (range.tl.nativeRowOff / 9525);\r\n    }\r\n\r\n    result.styleExpression = {left: `${result.x}px`, top: `${result.y}px`, height: `${result.height}px`, width: `${result.width}px`};\r\n\r\n    return result;\r\n  }\r\n\r\n  private getImage(imageId: number) {\r\n    /*const buffer = this.workbook.getImage(imageId).buffer;\r\n    // @ts-ignore\r\n    return btoa(buffer.reduce((data, byte) => data + String.fromCharCode(byte), ''));*/\r\n    return this.media[imageId].base64;\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {Workbook} from \"exceljs\";\r\nimport {Observable} from \"rxjs\";\r\nimport {ExcelSheet} from \"./class/excel-sheet\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NgExcelService {\r\n\r\n  constructor() { }\r\n\r\n  getFileToData(file: any) {\r\n    const workbook = new Workbook();\r\n    const images: any[] = [];\r\n    const arryBuffer = new Response(file).arrayBuffer();\r\n    return new Observable(subscriber => {\r\n      try {\r\n        arryBuffer.then( (data) => {\r\n          workbook.xlsx.load(data)\r\n            .then( () => {\r\n\r\n              // 이미지 buffer to base64, 현재 상황에서 이미지 주분 고려 안함\r\n              /*const media = (workbook as any).media;\r\n              media.forEach((image: any) => {\r\n                const img = {\r\n                  ...image,\r\n                  base64: this.getImage(image.buffer)\r\n                };\r\n                images.push(img);\r\n              });\r\n              */\r\n\r\n              const sheets: ExcelSheet[] = [];\r\n              workbook.worksheets.forEach(sheet => {\r\n                sheets.push(new ExcelSheet(sheet, workbook, images));\r\n              });\r\n              subscriber.next(sheets);\r\n              subscriber.complete();\r\n            });\r\n        });\r\n      } catch (err) {\r\n        subscriber.error(err);\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  private getImage(buffer: any[]) {\r\n    // @ts-ignore\r\n    return btoa(buffer.reduce((data, byte) => data + String.fromCharCode(byte), ''));\r\n  }\r\n}\r\n","import {Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\r\nimport {ExcelSheet} from '../../class/excel-sheet';\r\nimport {CdkVirtualScrollViewport} from '@angular/cdk/scrolling';\r\nimport {ExcelRow} from \"../../class/excel-row\";\r\n\r\n@Component({\r\n  selector: 'ng-excel-viewer',\r\n  templateUrl: './excel-viewer.component.html',\r\n  styleUrls: ['./excel-viewer.component.scss']\r\n})\r\nexport class ExcelViewerComponent implements OnInit {\r\n\r\n  @ViewChild('gridHeader')\r\n  gridHeaderRef: ElementRef | undefined;\r\n\r\n  @ViewChild('gridFixedHeader')\r\n  gridFixedHeaderRef: ElementRef | undefined;\r\n\r\n  @ViewChild('scrollViewport')\r\n  scrollViewport: CdkVirtualScrollViewport | undefined;\r\n\r\n  @ViewChild('sheetNames')\r\n  sheetNamesRef: ElementRef | undefined;\r\n\r\n  @Input('selectMode') selectMode: boolean = false;\r\n  @Output('selected') selected: EventEmitter<ExcelRow> = new EventEmitter<ExcelRow>();\r\n  @Output('unSelected') unSelected: EventEmitter<ExcelRow> = new EventEmitter<ExcelRow>();\r\n\r\n\r\n  excelData: ExcelSheet[] | undefined\r\n  @Input('excelData')\r\n  set setWorkBook(excelData: ExcelSheet[] | undefined) {\r\n    this.excelData = excelData;\r\n    console.log(excelData);\r\n    if (this.selectMode && this.excelData) {\r\n      this.excelData.forEach(sheet => {\r\n        sheet.rows.forEach(row => {\r\n          row.cells.forEach(cell => {\r\n            if (cell.merge) {\r\n              cell.cellStyle.height = cell.s_height + 'px';\r\n            }\r\n          })\r\n\r\n        })\r\n      })\r\n    }\r\n    setTimeout(() => {\r\n      this.updateRowWidth();\r\n    });\r\n  }\r\n\r\n  current = 0;\r\n\r\n  defaultHeight = 25;\r\n  fixedColumnWidth = 45;\r\n  rowWidth = 0;\r\n\r\n  itemSize = 15;\r\n  virtualImageOffset = 0;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  getRowStyle(rowType: string, row?: number) {\r\n    if (!this.excelData) {\r\n      return {};\r\n    }\r\n    const sheet = this.excelData[this.current];\r\n\r\n    let height: number = 0;\r\n    const rows = sheet.rows;\r\n\r\n    if (rowType === 'header' || !rows[row || 0]['height']) {\r\n      height = this.defaultHeight;\r\n    }\r\n    else {\r\n      height = rows[row || 0]['height'];\r\n    }\r\n\r\n    return {\r\n      width: `${this.rowWidth}px`,\r\n      height: `${this.selectMode ? '30' : height}px`,\r\n    };\r\n  }\r\n\r\n  updateRowWidth() {\r\n    if (!this.excelData || !this.excelData[this.current] || !this.scrollViewport) {\r\n      return;\r\n    }\r\n\r\n    let width = this.fixedColumnWidth;\r\n    const cols = this.excelData[this.current].cols;\r\n\r\n    for (let c = 0; c < cols.length; c++) {\r\n      width += cols[c].width ? cols[c].width + 1 : 100;\r\n    }\r\n\r\n    this.rowWidth = width;\r\n  }\r\n\r\n  selectSheet(index: number) {\r\n    this.current = index;\r\n    this.updateRowWidth();\r\n  }\r\n\r\n  hasScrollForSheets() {\r\n    if (!this.sheetNamesRef) {\r\n      return false;\r\n    }\r\n\r\n    return this.sheetNamesRef.nativeElement.scrollWidth > this.sheetNamesRef.nativeElement.offsetWidth;\r\n  }\r\n\r\n  onScrollGrid(event: any) {\r\n    // virtual image offset\r\n    if (!this.scrollViewport || !this.excelData || !this.gridHeaderRef || !this.gridFixedHeaderRef) {\r\n      return ;\r\n    }\r\n\r\n    const offset = this.scrollViewport['_renderedContentOffset'] || 0;\r\n    const index = Math.round(offset / this.itemSize);\r\n    if (!index) {\r\n      this.virtualImageOffset = 0;\r\n    } else {\r\n      let rowHeight = 0;\r\n      for (let i = 0; i < index; i++) {\r\n        const os = this.itemSize - this.excelData[this.current].rows[i].height;\r\n        rowHeight += os;\r\n      }\r\n      this.virtualImageOffset = rowHeight - offset;\r\n    }\r\n\r\n    // scroll left\r\n    const scrollLeft = event.target.scrollLeft;\r\n\r\n    if (!scrollLeft) {\r\n      this.gridHeaderRef.nativeElement.style.transform = `translateX(0px)`;\r\n      this.gridFixedHeaderRef.nativeElement.style.transform = `translateX(0px)`;\r\n      return;\r\n    }\r\n\r\n    this.gridHeaderRef.nativeElement.style.transform = `translateX(-${scrollLeft}px)`;\r\n    this.gridFixedHeaderRef.nativeElement.style.transform = `translateX(${scrollLeft}px)`;\r\n  }\r\n\r\n  onClickRow(row: ExcelRow) {\r\n    if (!this.selectMode || !this.excelData) {\r\n      return;\r\n    }\r\n    const selected = row.selected;\r\n    this.excelData[this.current].rows.forEach(row => {\r\n      row.selected = false;\r\n    });\r\n    row.selected = !selected;\r\n    if (row.selected) {\r\n      this.selected.next(row);\r\n    } else {\r\n      this.unSelected.next(row);\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"component-wrap\" [ngClass]=\"{'select-mode': selectMode}\" *ngIf=\"excelData && excelData[current]\">\r\n  <div class=\"grid-header\">\r\n    <div class=\"row\" #gridHeader [ngStyle]=\"getRowStyle('header')\">\r\n      <div class=\"cell fixed\" #gridFixedHeader></div>\r\n      <div class=\"cell\" *ngFor=\"let col of excelData[current].cols\" [style.width.px]=\"col.width\">\r\n        {{col.name}}\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"grid-body\" [ngClass]=\"{'withScroll': hasScrollForSheets()}\">\r\n    <cdk-virtual-scroll-viewport class=\"grid-body-viewport\"\r\n                                 [itemSize]=\"itemSize\" [minBufferPx]=\"500\" [maxBufferPx]=\"500\"\r\n                                 (scroll)=\"onScrollGrid($event)\"\r\n                                 #scrollViewport>\r\n      <!--현재 상황에서 이미지 고려 안함, 다음으로 -->\r\n      <!--<div class=\"img-wrap\" [style.transform]=\"'translate(45px, ' + virtualImageOffset + 'px)'\">\r\n        <div class=\"image\" *ngFor=\"let img of excelData[current].images\" [ngStyle]=\"img.styleExpression\">\r\n          <img [src]=\"'data:image/png;base64,' + img.image\">\r\n        </div>\r\n      </div>-->\r\n      <ng-container *cdkVirtualFor=\"let row of excelData[current].rows; let r = index; templateCacheSize: 0;\">\r\n        <div *ngIf=\"!row.hidden\" class=\"row\" [ngStyle]=\"getRowStyle('data', r || 0)\" (click)=\"onClickRow(row)\">\r\n          <div class=\"hover-border\" [ngClass]=\"{'active': row.selected}\">\r\n            <div class=\"selected\">\r\n              <svg width=\"13\" height=\"10\" viewBox=\"0 0 13 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M11.8899 1.13993C11.7947 1.04768 11.6674 0.996094 11.5349 0.996094C11.4024 0.996094 11.2751 1.04768 11.1799 1.13993L5.87988 6.48993C5.8334 6.5368 5.77815 6.57399 5.71722 6.59938C5.65629 6.62476 5.59091 6.63783 5.5249 6.63783C5.4589 6.63783 5.39357 6.62476 5.33264 6.59938C5.27171 6.57399 5.2164 6.5368 5.16992 6.48993L2.54993 3.84993C2.50345 3.80307 2.44814 3.76587 2.38721 3.74049C2.32628 3.7151 2.26089 3.70203 2.19489 3.70203C2.12888 3.70203 2.06355 3.7151 2.00262 3.74049C1.94169 3.76587 1.88639 3.80307 1.8399 3.84993L1.13989 4.54993C1.04764 4.64508 0.996094 4.7724 0.996094 4.90493C0.996094 5.03746 1.04764 5.16478 1.13989 5.25993L5.13989 9.31993C5.23504 9.41218 5.36241 9.46377 5.49493 9.46377C5.62746 9.46377 5.75476 9.41218 5.84991 9.31993L12.5599 2.54993C12.6515 2.45647 12.7028 2.33081 12.7028 2.19993C12.7028 2.06905 12.6515 1.9434 12.5599 1.84993L11.8899 1.13993Z\" fill=\"white\"/>\r\n              </svg>\r\n            </div>\r\n          </div>\r\n          <div class=\"cell fixed\">\r\n            <div class=\"cell-item\" [innerHTML]=\"(r + 1)\"></div>\r\n          </div>\r\n          <div class=\"cell\" *ngFor=\"let cell of row.cells; let c = index\"\r\n               [style.width.px]=\"excelData[current].cols[c]?.width || 0\">\r\n            <div class=\"cell-item\" [innerHTML]=\"cell.cellValue\" [ngStyle]=\"cell.cellStyle\"></div>\r\n          </div>\r\n        </div>\r\n      </ng-container>\r\n    </cdk-virtual-scroll-viewport>\r\n  </div>\r\n  <div class=\"grid-footer\" *ngIf=\"!selectMode\">\r\n    <ul class=\"sheets\" #sheetNames>\r\n      <li *ngFor=\"let sheet of excelData; let i = index\" [ngClass]=\"i === current ? 'selected' : ''\" (click)=\"selectSheet(i)\">\r\n        {{ sheet.name }}\r\n      </li>\r\n    </ul>\r\n  </div>\r\n\r\n</div>\r\n<table >\r\n\r\n</table>\r\n","import { NgModule } from '@angular/core';\r\nimport {ExcelViewerComponent} from \"./component/excel-viewer/excel-viewer.component\";\r\nimport {ScrollingModule} from \"@angular/cdk/scrolling\";\r\nimport {CommonModule} from \"@angular/common\";\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ExcelViewerComponent,\r\n  ],\r\n  imports: [\r\n    ScrollingModule,\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    ExcelViewerComponent,\r\n  ]\r\n})\r\nexport class NgExcelModule { }\r\n","/*\r\n * Public API Surface of ng-excel\r\n */\r\n\r\nexport * from './lib/ng-excel.service';\r\nexport * from './lib/component/excel-viewer/excel-viewer.component';\r\nexport * from './lib/ng-excel.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}